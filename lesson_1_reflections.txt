How did viewing a diff between two versions of a file help you see the bug that was introduced?

	При использовании команды diff нет необходимости сравнивать постройчно каждый файл самому,
	программа автоматически сравнивает строки в двух файлах и указывает на те, которые отличаются
	в старой и новой версии. Таким образом, нахождение ошибки происходить уже не в масштабах файла,
	а только одной строки.

How could having easy access to the entire history of a file make you a more efficient programmer
in the long term?

	Если после длительного процесса написания программы она перестает работать,
	можно просто вернуться к предыдущей рабочей версии. В случае же отсутсвия
	истории, придется разбираться со всем существующим кодом в попытке найти проблему
	и вручную удалять неработающие элементы, при этом не нарушив взаимодействие всего кода.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git,
vs having versions automatically saved, like Google docs does?

	Плюс ручного сохранения - автор всегда знает, когда проделано достаточно работы на одну
	логическую единицу, что не может определить компьютер. К тому же, нет необходимости без
	надобности сохранять файл, с которым не	производилось существенных маниауляций.
	Главный минус - автор сам отвечает за сохранение изменений; если не	было сохранения,
	то не будет и варианта возврата, в отличие от автосохранения по времени.

Why do you think some version control systems, like Git, allow saving multiple files in one commit,
 while others, like Google Docs, treat each file separately?

	Причина в том что Git предназначен для хранения файлов исходного когда, которые практически
	всегда сильно связаны друг с другом и нуждаются в совместном редактировании, в то время как
	текстовые, графические и другие документы могут редактироваться отдельно без вреда.

How can you use the commands git log and git diff to view the history of files?

	Команду log можно использовать для просмота всех версий сохраненных файлов, т.е. их истории,
	команда diff позволяет сравнить две версии репозитория с точным указанием измененных строк.

How might using version control make you more confident to make changes that could break something?

	Когда существуюют предыдущие версии файла, можно смело экспреиментировать с ним, не боясь
	бесповоротно всё испортить, ведь всегда можно вернуться к предыдущей версии в случае неудачи.

Now that you have your workspace set up, what do you want to try using Git for?

	Мне бы хотелось попробовать создать свой репозиторий и сделать несколько пробных коммитов
	с имзенениями.